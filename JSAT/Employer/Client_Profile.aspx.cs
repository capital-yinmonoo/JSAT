using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.IO;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using JSAT_BL;
using JSAT_Common;
using JSAT_Ver1;
using System.Drawing;
using System.Globalization;

namespace JSAT_Ver1.Employer
{
    public partial class Client_Profile : System.Web.UI.Page
    {
        Client_ProfileBL clientProfile;
        Client_RecruitmentBL clientRecruitment;
        GlobalBL globalBL;
        BusinessTypeBL businessType;
        Client_ProfileEntity clientProfileInfo;

        protected string InputValue { get; set; }
        int id = 0;
        public int ID
        {
            get
            {
                if (Request.QueryString["Client_ID"] != null)
                    return int.Parse(Request.QueryString["Client_ID"].ToString());
                return 0;
            }
        }

        string Client_DataPath = ConfigurationManager.AppSettings["Client_DataPath"].ToString();

        //Events
        protected void Page_Load(object sender, EventArgs e)
        {
            Response.Clear();
            Page.MaintainScrollPositionOnPostBack = false;
            ImageButton1.Visible = false;
            // User Authorized on saving , uncommen later.
            UserRoleBL user = new UserRoleBL();
            int userID = BaseLib.Convert_Int(Session["UserID"].ToString());

            bool resultRead = user.CanRead(userID, "016");
            if (resultRead)
            {
                btnSubmit.Visible = false;
                btnDelete.Visible = false;
            }

            bool resultDelete = user.CanDelete(userID, "016");
            if (resultDelete)
                btnDelete.Visible = true;
            else
                btnDelete.Visible = false;

            bool resultEdit = user.CanSave(userID, "016");
            if (resultEdit)
                btnSubmit.Visible = true;
            else
                btnSubmit.Visible = false;
            string ClientID = hdfClient_ProfileID.Value; //(New)
            ClientControlLink1.ClientID = Request.QueryString["Client_ID"];  //for page transfer with Client_ID (Edit)
            if (Request.QueryString["Client_ID"] != null)
            {
                lblUpdater.Visible = true;
                lblUpdateTime.Visible = true;
                lblUpdaterData.Visible = true;
                lblUpdateTimeData.Visible = true;

                clientProfile = new Client_ProfileBL();
                DataTable dt = new DataTable();
                dt = clientProfile.SelectById(BaseLib.Convert_Int(Request.QueryString["Client_ID"]));
                if (dt.Rows.Count > 0)
                {
                    lblUpdaterData.Text = dt.Rows[0]["LogIn_ID"].ToString();
                    lblUpdateTimeData.Text = dt.Rows[0]["UpdatedDate"].ToString();
                }

                ClientControlLink1.ClientID = Request.QueryString["Client_ID"];
                //btnDelete.Enabled = true;
                lblHeader.Text = "クライアント情報編集(Client Information Editing)";
                Label.Visible = true;
                lblClientCode.Visible = true;

                btnSubmit.Text = "Update";  //更新する
            }
            else
            {
                clientProfile = new Client_ProfileBL();
                lblClientCode.Text = clientProfile.AutoGenerated_ClientCode().ToString();
                lblHeader.Text = "クライアント情報登録(Client Information Registration)";
                btnSubmit.Text = "Register";    //登録する
            }

            if (ClientID != string.Empty && ClientID != "0")
            {
                ClientControlLink1.ClientID = ClientID;
            }
            if (!IsPostBack)
            {
                if (Request.UrlReferrer != null)
                {
                    ViewState["UrlReferrer"] = Request.UrlReferrer.ToString();
                    Label2.Text = Request.UrlReferrer.ToString();
                    //ViewState["PreviousPage"] = Request.UrlReferrer.ToString();
                }
                else
                    ViewState["UrlReferrer"] = Label2.Text;

                txtCompany.Focus();
                if (Request.QueryString["Client_ID"] != null)
                {
                    FillData();
                }
                Get_Industry();

                Get_BusinessType();
            }
            if (fileUpload.HasFile)
            {
                lnkDownload.Text = "~Upload Folder/" + fileUpload.FileName;
            }
        }

        protected void btnSubmit_Click(object sender, EventArgs e)
        {
            if (txtRemarks.Text.Length <= 400)
            {
                try
                {
                    if (ID == 0)
                        Save();
                    else
                        Update();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }
        }

        protected void lnkDownload_Click(object sender, EventArgs e)
        {
            try
            {
                string strURL = lnkDownload.Text;
                string FileToCheck = Client_DataPath + strURL;
                if (File.Exists(Server.MapPath(FileToCheck)))
                {
                    WebClient req = new WebClient();
                    HttpResponse response = HttpContext.Current.Response;
                    response.Clear();
                    response.ClearContent();
                    response.ClearHeaders();
                    response.Buffer = true;
                    response.AddHeader("Content-Disposition", "attachment;filename=\"" + FileToCheck + "\"");
                    response.ContentType = "application/octet-stream";
                    byte[] data = req.DownloadData(Server.MapPath(FileToCheck));
                    response.BinaryWrite(data);
                    response.End();
                }
                else
                {
                    GlobalUI.MessageBox("File doesn't exist!");
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void ddlIndustry_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                SelectByIndustry(int.Parse(ddlIndustry.SelectedValue));
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        //Functions
        private void Get_Industry()
        {
            try
            {
                globalBL = new GlobalBL();
                ddlIndustry.DataSource = globalBL.Get_Data("Industry_Type");
                ddlIndustry.DataTextField = "Description";
                ddlIndustry.DataValueField = "ID";
                ddlIndustry.DataBind();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private void Get_BusinessType()
        {
            try
            {
                businessType = new BusinessTypeBL();
                ddlTypeOfBusiness.DataSource = businessType.SelectAll();
                ddlTypeOfBusiness.DataTextField = "Description";
                ddlTypeOfBusiness.DataValueField = "ID";
                ddlTypeOfBusiness.DataBind();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private void Set_Profile(Client_ProfileEntity clientProfileInfo)
        {
            try
            {
                if (Request.QueryString["ID"] != null)
                {
                    clientProfileInfo.ID = BaseLib.Convert_Int(Request.QueryString["ID"]);
                }
                clientProfileInfo.Client_Name = txtCompany.Text;
                clientProfileInfo.Client_Code = int.Parse(lblClientCode.Text);
                clientProfileInfo.Telephone_No = txtTelephoneNumber.Text;
                clientProfileInfo.Fax_No = txtFax.Text;
                clientProfileInfo.Website = txtWebsite.Text;
                clientProfileInfo.Location = txtLoaction.Text;
                clientProfileInfo.Industry_TypeID = BaseLib.Convert_Int(ddlIndustry.SelectedValue.ToString());
                clientProfileInfo.Business_TypeID = BaseLib.Convert_Int(ddlTypeOfBusiness.SelectedValue.ToString());
                if (BaseLib.IsInt(txtNoOfEmployees.Text))
                {
                    clientProfileInfo.Total_Employees = BaseLib.Convert_Int(txtNoOfEmployees.Text);
                }
                if (BaseLib.IsInt(txtHouseNumber.Text))
                {
                    clientProfileInfo.NoofClubs = BaseLib.Convert_Int(txtHouseNumber.Text);
                }

                clientProfileInfo.Establishment_Date = ddlMonth.SelectedValue.ToString() + "-" + ddlYear.SelectedValue.ToString();

                clientProfileInfo.Remarks = txtRemarks.Text;
                if (chkConsent.Checked)
                {
                    clientProfileInfo.Consent = "Yes";
                }
                else
                {
                    clientProfileInfo.Consent = "No";
                }
                if (fileUpload.HasFile)
                {
                    int clientID = BaseLib.Convert_Int(Request.QueryString["Client_ID"]);
                    string File = fileUpload.FileName;
                    clientProfileInfo.Agreement_Data = clientID + "_" + File;
                    fileUpload.SaveAs(Server.MapPath(Client_DataPath) + clientID + "_" + File);
                    lnkDownload.Text = clientID + "_" + File;
                    lblfileUpload.Text = clientID + "_" + File;
                }
                else
                {
                    clientProfileInfo.Agreement_Data = lnkDownload.Text;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

        }

        private void Save()
        {
            clientProfile = new Client_ProfileBL();
            clientProfileInfo = new Client_ProfileEntity();
            Set_Profile(clientProfileInfo);
            CreatedDateTime();
            UpdatedDateTime();
            string result = clientProfile.Insert(clientProfileInfo, (int)EnumBase.Save.Insert);
            clientProfileInfo.Establishment_Date = ddlMonth.Text + '-' + ddlYear.Text;

            if (result == "Save success!")
            {
                object referrer = ViewState["UrlReferrer"];
                string url = (string)referrer;
                string script = "window.onload = function(){ alert('";
                script += result;
                script += "');";
                script += "window.location = '";
                script += url;
                script += "'; }";
                ClientScript.RegisterStartupScript(this.GetType(), "Redirect", script, true);

            }
            else if (result == "Save fail!")
            {
                GlobalUI.MessageBox(result);
            }

            if (!string.IsNullOrWhiteSpace(lnkDownload.Text))
                btnImageDelete.Visible = true;
            hdfClient_ProfileID.Value = clientProfileInfo.ID.ToString(); //get the CilentID after saving.
            ClientControlLink1.ClientProfileLink = true;
            ClientControlLink1.RecruitmentLink = true;
            ClientControlLink1.CVHistoryLink = true;
        }

        private void Update()
        {
            btnSubmit.Text = "Update"; //更新する
            clientProfile = new Client_ProfileBL();
            clientProfileInfo = new Client_ProfileEntity();
            Set_Profile(clientProfileInfo);
            clientProfileInfo.ID = ID;
            UpdatedDateTime();
            string result = clientProfile.Update(clientProfileInfo, (int)EnumBase.Save.Update);
            if (result == "Update success!")
            {
                object referrer = ViewState["UrlReferrer"];
                string url = (string)referrer;
                string script = "window.onload = function(){ alert('";
                script += result;
                script += "');";
                script += "window.location = '";
                script += url;
                script += "'; }";
                ClientScript.RegisterStartupScript(this.GetType(), "Redirect", script, true);
            }



            if (!string.IsNullOrWhiteSpace(lnkDownload.Text))
            {
                btnImageDelete.Visible = true;
                string strURL = lnkDownload.Text;
                string FileToCheck = Client_DataPath + strURL;
                ImageButton1.ImageUrl = FileToCheck;
                ImageButton1.Visible = true;
            }
            id = clientProfileInfo.ID;
            hdfClient_ProfileID.Value = clientProfileInfo.ID.ToString();
            ClientControlLink1.ClientProfileLink = true;
            ClientControlLink1.RecruitmentLink = true;
            ClientControlLink1.CVHistoryLink = true;

        }

        private void Clear()
        {
            txtCompany.Text = string.Empty;
            lblClientCode.Text = string.Empty;
            txtTelephoneNumber.Text = string.Empty;
            txtFax.Text = string.Empty;
            txtWebsite.Text = string.Empty;
            txtLoaction.Text = string.Empty;
            ddlTypeOfBusiness.SelectedIndex = -1;
            txtNoOfEmployees.Text = string.Empty;
            txtHouseNumber.Text = string.Empty;
            this.InputValue = string.Empty;
            txtRemarks.Text = string.Empty;
            chkConsent.Checked = false;
            lblfileUpload.Text = string.Empty;
            lnkDownload.Text = string.Empty;
            fileUpload.Dispose();
        }

        protected void FillData()
        {
            try
            {
                clientProfile = new Client_ProfileBL();
                clientProfileInfo = new Client_ProfileEntity();

                clientProfileInfo = clientProfile.SelectByID(ID);

                if (clientProfileInfo != null)
                {
                    hdfClient_ProfileID.Value = clientProfileInfo.ID.ToString();
                    txtCompany.Text = clientProfileInfo.Client_Name;
                    lblClientCode.Text = clientProfileInfo.Client_Code.ToString();
                    txtTelephoneNumber.Text = clientProfileInfo.Telephone_No;
                    txtFax.Text = clientProfileInfo.Fax_No;
                    txtWebsite.Text = clientProfileInfo.Website;
                    txtLoaction.Text = clientProfileInfo.Location;
                    ddlIndustry.SelectedValue = clientProfileInfo.Industry_TypeID.ToString();
                    ddlTypeOfBusiness.SelectedValue = clientProfileInfo.Business_TypeID.ToString();
                    txtNoOfEmployees.Text = clientProfileInfo.Total_Employees.ToString();
                    txtHouseNumber.Text = clientProfileInfo.NoofClubs.ToString();
                    if (!String.IsNullOrWhiteSpace(clientProfileInfo.Establishment_Date.ToString()))
                    {
                        String[] str = clientProfileInfo.Establishment_Date.ToString().Split('-');
                        if (str.Length == 2)
                        {
                            if (ddlMonth.Items.FindByText(str[0]) != null)
                            {
                                ddlMonth.ClearSelection();
                                ddlMonth.Items.FindByText(str[0]).Selected = true;
                            }

                            ddlYear.Text = str[1];
                        }

                    }

                    txtRemarks.Text = clientProfileInfo.Remarks;
                    if (clientProfileInfo.Consent.ToLower() == "yes")
                    {
                        chkConsent.Checked = true;
                    }
                    else
                    {
                        chkConsent.Checked = false;
                    }

                    lblfileUpload.Text = clientProfileInfo.Agreement_Data;
                    ClientControlLink1.ClientProfileLink = true;
                    ClientControlLink1.RecruitmentLink = true;
                    ClientControlLink1.CVHistoryLink = true;
                    if (!String.IsNullOrWhiteSpace(clientProfileInfo.Agreement_Data))
                    {
                        lnkDownload.Text = clientProfileInfo.Agreement_Data;
                        ImageButton1.Visible = true;
                        btnImageDelete.Visible = true;
                    }

                    hdfFileName.Value = clientProfileInfo.Agreement_Data;
                    string strURL = lnkDownload.Text;
                    string FileToCheck = Client_DataPath + strURL;
                    ImageButton1.ImageUrl = FileToCheck;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void SelectByIndustry(int id)
        {

            try
            {
                clientProfile = new Client_ProfileBL();
                DataTable dt = clientProfile.SelectByIndustryID(id);
                if (dt != null && dt.Rows.Count > 0)
                {
                    ddlTypeOfBusiness.DataSource = dt;//if there is no row, error occur
                    ddlTypeOfBusiness.DataTextField = "Description";
                    ddlTypeOfBusiness.DataValueField = "ID";
                    ddlTypeOfBusiness.DataBind();
                }
                else
                {
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void btnDelete_Click(object sender, EventArgs e)
        {
            try
            {
                clientProfile = new Client_ProfileBL();
                clientRecruitment = new Client_RecruitmentBL();

                clientProfile.Delete(ID, Convert.ToInt32(Session["UserID"]), DeletedDateTime());
                clientRecruitment.DeleteByClientID(ID);
                string url = "Client_Profile_View.aspx";
                string script = "window.onload = function(){ alert('";
                script += "Delete Successfully";
                script += "');";
                script += "window.location = '";
                script += url;
                script += "'; }";
                ClientScript.RegisterStartupScript(this.GetType(), "Redirect", script, true);
                Clear();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void btnImageDelete_Click(object sender, EventArgs e)
        {
            try
            {
                clientProfile = new Client_ProfileBL();
                clientProfileInfo = new Client_ProfileEntity();

                clientProfileInfo = clientProfile.SelectByID(ID);

                if (clientProfileInfo != null)
                {
                    string ImageFilePath = Server.MapPath(Client_DataPath) + clientProfileInfo.Agreement_Data;
                    if (File.Exists(ImageFilePath))
                    {
                        System.IO.File.Delete(ImageFilePath);
                        lnkDownload.Text = string.Empty;
                        btnImageDelete.Visible = false;
                    }
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void CreatedDateTime()
        {
            try
            {
                clientProfileInfo.CreatedBy = Convert.ToInt32(Session["UserID"]);
                clientProfileInfo.CreatedDate = Convert.ToDateTime(System.DateTime.Now.ToString());
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void UpdatedDateTime()
        {
            try
            {
                clientProfileInfo.UpdatedBy = Convert.ToInt32(Session["UserID"]);
                clientProfileInfo.UpdatedDate = Convert.ToDateTime(System.DateTime.Now.ToString());
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected DateTime DeletedDateTime()
        {
            return Convert.ToDateTime(System.DateTime.Now.ToString());
        }

        protected void cusCustom_ServerValidate(object sender, ServerValidateEventArgs e)
        {
            try
            {
                if (e.Value.Length < 400)
                    e.IsValid = true;
                else
                {
                    e.IsValid = false;
                    return;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void btnRefresh_Click(object sender, EventArgs e)
        {
            Get_Industry();
            Get_BusinessType();
        }

        protected void imgIndustry_Click(object sender, ImageClickEventArgs e)
        {
            Get_Industry();
            Get_BusinessType();
        }
    }
}